// Generated by CIRCT firtool-1.62.0
module PC(
  input         clock,
                reset,
  output [31:0] io_pc_PF_0,
                io_pc_PF_1,
                io_pc_PF_2,
                io_pc_PF_3,
                io_pc_PF_4,
                io_pc_PF_5,
                io_pc_PF_6,
                io_pc_PF_7,
                io_pc_PF_8,
                io_pc_PF_9,
  input         io_pc_stall,
                io_predict_fail,
  output [31:0] io_npc_0,
                io_npc_1,
  input         io_pred_jump_0,
                io_pred_jump_1,
  input  [31:0] io_pred_npc,
                io_branch_target,
  output        io_inst_valid_PF_0,
                io_inst_valid_PF_1,
  output [7:0]  io_exception_PF,
  input         io_flush_by_pd,
  input  [31:0] io_flush_pd_target,
  input         io_is_idle_cmt,
                io_has_intr,
                io_has_csr_change
);

  reg  [31:0] pc_0;
  reg  [31:0] pc_1;
  reg  [31:0] pc_2;
  reg  [31:0] pc_3;
  reg  [31:0] pc_4;
  reg  [31:0] pc_5;
  reg  [31:0] pc_6;
  reg  [31:0] pc_7;
  reg  [31:0] pc_8;
  reg  [31:0] pc_9;
  reg         run;
  wire        _GEN = run | io_has_csr_change;
  wire [1:0]  _GEN_0 = {io_pred_jump_1, io_pred_jump_0};
  wire [31:0] _io_npc_0_T = 32'(pc_0 + 32'h8);
  wire [31:0] _io_npc_0_T_3 = {_io_npc_0_T[31:3], 3'h0};
  wire [31:0] _GEN_1 = (|_GEN_0) ? io_pred_npc : _io_npc_0_T_3;
  wire [31:0] _GEN_2 = io_pc_stall ? pc_0 : _GEN_1;
  wire [31:0] _GEN_3 = io_flush_by_pd ? io_flush_pd_target : _GEN_2;
  wire [31:0] _GEN_4 = io_predict_fail ? io_branch_target : _GEN_3;
  wire [31:0] _io_npc_1_T = 32'(pc_1 + 32'h8);
  wire [31:0] _io_npc_1_T_3 = {_io_npc_1_T[31:3], 3'h0};
  wire [31:0] _GEN_5 = (|_GEN_0) ? io_pred_npc : _io_npc_1_T_3;
  wire [31:0] _GEN_6 = io_pc_stall ? pc_1 : _GEN_5;
  wire [31:0] _GEN_7 = io_flush_by_pd ? io_flush_pd_target : _GEN_6;
  wire [31:0] _GEN_8 = io_predict_fail ? io_branch_target : _GEN_7;
  wire [31:0] _io_npc_2_T = 32'(pc_2 + 32'h8);
  wire [31:0] _io_npc_3_T = 32'(pc_3 + 32'h8);
  wire [31:0] _io_npc_4_T = 32'(pc_4 + 32'h8);
  wire [31:0] _io_npc_5_T = 32'(pc_5 + 32'h8);
  wire [31:0] _io_npc_6_T = 32'(pc_6 + 32'h8);
  wire [31:0] _io_npc_7_T = 32'(pc_7 + 32'h8);
  wire [31:0] _io_npc_8_T = 32'(pc_8 + 32'h8);
  wire [31:0] _io_npc_9_T = 32'(pc_9 + 32'h8);
  wire        _GEN_9 = run ? run : io_is_idle_cmt;
  always @(posedge clock) begin
    if (reset) begin
      pc_0 <= 32'h1C000000;
      pc_1 <= 32'h1C000000;
      pc_2 <= 32'h1C000000;
      pc_3 <= 32'h1C000000;
      pc_4 <= 32'h1C000000;
      pc_5 <= 32'h1C000000;
      pc_6 <= 32'h1C000000;
      pc_7 <= 32'h1C000000;
      pc_8 <= 32'h1C000000;
      pc_9 <= 32'h1C000000;
      run <= 1'h0;
    end
    else begin
      if (~_GEN) begin
        if (io_predict_fail) begin
          pc_0 <= io_branch_target;
          pc_1 <= io_branch_target;
          pc_2 <= io_branch_target;
          pc_3 <= io_branch_target;
          pc_4 <= io_branch_target;
          pc_5 <= io_branch_target;
          pc_6 <= io_branch_target;
          pc_7 <= io_branch_target;
          pc_8 <= io_branch_target;
          pc_9 <= io_branch_target;
        end
        else if (io_flush_by_pd) begin
          pc_0 <= io_flush_pd_target;
          pc_1 <= io_flush_pd_target;
          pc_2 <= io_flush_pd_target;
          pc_3 <= io_flush_pd_target;
          pc_4 <= io_flush_pd_target;
          pc_5 <= io_flush_pd_target;
          pc_6 <= io_flush_pd_target;
          pc_7 <= io_flush_pd_target;
          pc_8 <= io_flush_pd_target;
          pc_9 <= io_flush_pd_target;
        end
        else if (io_pc_stall) begin
        end
        else if (|_GEN_0) begin
          pc_0 <= io_pred_npc;
          pc_1 <= io_pred_npc;
          pc_2 <= io_pred_npc;
          pc_3 <= io_pred_npc;
          pc_4 <= io_pred_npc;
          pc_5 <= io_pred_npc;
          pc_6 <= io_pred_npc;
          pc_7 <= io_pred_npc;
          pc_8 <= io_pred_npc;
          pc_9 <= io_pred_npc;
        end
        else begin
          pc_0 <= _io_npc_0_T_3;
          pc_1 <= _io_npc_1_T_3;
          pc_2 <= {_io_npc_2_T[31:3], 3'h0};
          pc_3 <= {_io_npc_3_T[31:3], 3'h0};
          pc_4 <= {_io_npc_4_T[31:3], 3'h0};
          pc_5 <= {_io_npc_5_T[31:3], 3'h0};
          pc_6 <= {_io_npc_6_T[31:3], 3'h0};
          pc_7 <= {_io_npc_7_T[31:3], 3'h0};
          pc_8 <= {_io_npc_8_T[31:3], 3'h0};
          pc_9 <= {_io_npc_9_T[31:3], 3'h0};
        end
      end
      run <= ~io_has_intr & _GEN_9;
    end
  end // always @(posedge)
  assign io_pc_PF_0 = pc_0;
  assign io_pc_PF_1 = pc_1;
  assign io_pc_PF_2 = pc_2;
  assign io_pc_PF_3 = pc_3;
  assign io_pc_PF_4 = pc_4;
  assign io_pc_PF_5 = pc_5;
  assign io_pc_PF_6 = pc_6;
  assign io_pc_PF_7 = pc_7;
  assign io_pc_PF_8 = pc_8;
  assign io_pc_PF_9 = pc_9;
  assign io_npc_0 = _GEN ? pc_0 : _GEN_4;
  assign io_npc_1 = _GEN ? pc_1 : _GEN_8;
  assign io_inst_valid_PF_0 = ~_GEN;
  assign io_inst_valid_PF_1 = ~_GEN & ~io_pred_jump_0 & ~(pc_1[2]);
  assign io_exception_PF = pc_1[1:0] == 2'h0 ? 8'h0 : 8'h88;
endmodule

