// Generated by CIRCT firtool-1.62.0
module LS_EX2_WB_Reg(
  input         clock,
                reset,
                io_flush,
                io_inst_pack_EX2_rd_valid,
  input  [5:0]  io_inst_pack_EX2_prd,
  input  [4:0]  io_inst_pack_EX2_rob_index,
  input         io_inst_pack_EX2_inst_valid,
  input  [31:0] io_vaddr_EX2,
  input  [7:0]  io_exception_EX2,
  input  [31:0] io_mem_rdata_EX2,
  output        io_inst_pack_WB_rd_valid,
  output [5:0]  io_inst_pack_WB_prd,
  output [4:0]  io_inst_pack_WB_rob_index,
  output        io_inst_pack_WB_inst_valid,
  output [31:0] io_vaddr_WB,
  output [7:0]  io_exception_WB,
  output [31:0] io_mem_rdata_WB
);

  reg        inst_pack_reg_rd_valid;
  reg [5:0]  inst_pack_reg_prd;
  reg [4:0]  inst_pack_reg_rob_index;
  reg        inst_pack_reg_inst_valid;
  reg [31:0] vaddr_reg;
  reg [7:0]  exception_reg;
  reg [31:0] mem_rdata_reg;
  always @(posedge clock) begin
    if (reset) begin
      inst_pack_reg_rd_valid <= 1'h0;
      inst_pack_reg_prd <= 6'h0;
      inst_pack_reg_rob_index <= 5'h0;
      inst_pack_reg_inst_valid <= 1'h0;
      vaddr_reg <= 32'h0;
      exception_reg <= 8'h0;
      mem_rdata_reg <= 32'h0;
    end
    else begin
      inst_pack_reg_rd_valid <= ~io_flush & io_inst_pack_EX2_rd_valid;
      inst_pack_reg_prd <= io_flush ? 6'h0 : io_inst_pack_EX2_prd;
      inst_pack_reg_rob_index <= io_flush ? 5'h0 : io_inst_pack_EX2_rob_index;
      inst_pack_reg_inst_valid <= ~io_flush & io_inst_pack_EX2_inst_valid;
      if (io_flush) begin
      end
      else begin
        vaddr_reg <= io_vaddr_EX2;
        exception_reg <= io_exception_EX2;
        mem_rdata_reg <= io_mem_rdata_EX2;
      end
    end
  end // always @(posedge)
  assign io_inst_pack_WB_rd_valid = inst_pack_reg_rd_valid;
  assign io_inst_pack_WB_prd = inst_pack_reg_prd;
  assign io_inst_pack_WB_rob_index = inst_pack_reg_rob_index;
  assign io_inst_pack_WB_inst_valid = inst_pack_reg_inst_valid;
  assign io_vaddr_WB = vaddr_reg;
  assign io_exception_WB = exception_reg;
  assign io_mem_rdata_WB = mem_rdata_reg;
endmodule

