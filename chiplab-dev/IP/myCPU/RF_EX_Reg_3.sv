// Generated by CIRCT firtool-1.62.0
module RF_EX_Reg_3(
  input         clock,
                reset,
                io_flush,
                io_stall,
                io_inst_pack_RF_rd_valid,
  input  [5:0]  io_inst_pack_RF_prd,
  input  [31:0] io_inst_pack_RF_imm,
  input  [4:0]  io_inst_pack_RF_rob_index,
                io_inst_pack_RF_mem_type,
  input  [2:0]  io_inst_pack_RF_priv_vec,
  input         io_inst_pack_RF_inst_valid,
  input  [31:0] io_src1_RF,
                io_src2_RF,
  output        io_inst_pack_EX_rd_valid,
  output [5:0]  io_inst_pack_EX_prd,
  output [31:0] io_inst_pack_EX_imm,
  output [4:0]  io_inst_pack_EX_rob_index,
                io_inst_pack_EX_mem_type,
  output [2:0]  io_inst_pack_EX_priv_vec,
  output        io_inst_pack_EX_inst_valid,
  output [31:0] io_src1_EX,
                io_src2_EX
);

  reg         inst_pack_reg_rd_valid;
  reg  [5:0]  inst_pack_reg_prd;
  reg  [31:0] inst_pack_reg_imm;
  reg  [4:0]  inst_pack_reg_rob_index;
  reg  [4:0]  inst_pack_reg_mem_type;
  reg  [2:0]  inst_pack_reg_priv_vec;
  reg         inst_pack_reg_inst_valid;
  reg  [31:0] src1_reg;
  reg  [31:0] src2_reg;
  wire        _GEN = io_stall ? inst_pack_reg_rd_valid : io_inst_pack_RF_rd_valid;
  wire        _GEN_0 = io_stall ? inst_pack_reg_inst_valid : io_inst_pack_RF_inst_valid;
  always @(posedge clock) begin
    if (reset) begin
      inst_pack_reg_rd_valid <= 1'h0;
      inst_pack_reg_prd <= 6'h0;
      inst_pack_reg_imm <= 32'h0;
      inst_pack_reg_rob_index <= 5'h0;
      inst_pack_reg_mem_type <= 5'h0;
      inst_pack_reg_priv_vec <= 3'h0;
      inst_pack_reg_inst_valid <= 1'h0;
      src1_reg <= 32'h0;
      src2_reg <= 32'h0;
    end
    else begin
      inst_pack_reg_rd_valid <= ~io_flush & _GEN;
      if (io_flush) begin
        inst_pack_reg_prd <= 6'h0;
        inst_pack_reg_imm <= 32'h0;
        inst_pack_reg_rob_index <= 5'h0;
        inst_pack_reg_mem_type <= 5'h0;
        inst_pack_reg_priv_vec <= 3'h0;
      end
      else if (io_stall) begin
      end
      else begin
        inst_pack_reg_prd <= io_inst_pack_RF_prd;
        inst_pack_reg_imm <= io_inst_pack_RF_imm;
        inst_pack_reg_rob_index <= io_inst_pack_RF_rob_index;
        inst_pack_reg_mem_type <= io_inst_pack_RF_mem_type;
        inst_pack_reg_priv_vec <= io_inst_pack_RF_priv_vec;
      end
      inst_pack_reg_inst_valid <= ~io_flush & _GEN_0;
      if (io_flush | io_stall) begin
      end
      else begin
        src1_reg <= io_src1_RF;
        src2_reg <= io_src2_RF;
      end
    end
  end // always @(posedge)
  assign io_inst_pack_EX_rd_valid = inst_pack_reg_rd_valid;
  assign io_inst_pack_EX_prd = inst_pack_reg_prd;
  assign io_inst_pack_EX_imm = inst_pack_reg_imm;
  assign io_inst_pack_EX_rob_index = inst_pack_reg_rob_index;
  assign io_inst_pack_EX_mem_type = inst_pack_reg_mem_type;
  assign io_inst_pack_EX_priv_vec = inst_pack_reg_priv_vec;
  assign io_inst_pack_EX_inst_valid = inst_pack_reg_inst_valid;
  assign io_src1_EX = src1_reg;
  assign io_src2_EX = src2_reg;
endmodule

